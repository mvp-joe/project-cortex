name: Release Cortex-Embed

on:
  push:
    tags:
      - 'v*-embed'

permissions:
  contents: write
  packages: write

jobs:
  # ============================================================================
  # Generate Python dependencies for all platforms in parallel
  # ============================================================================
  generate-python-deps:
    name: Generate Python Deps (${{ matrix.platform }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - darwin-amd64
          - darwin-arm64
          - linux-amd64
          - linux-arm64
          - windows-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache Python dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: internal/embed/server/data/${{ matrix.platform }}
          key: python-deps-${{ matrix.platform }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            python-deps-${{ matrix.platform }}-

      - name: Generate Python dependencies for ${{ matrix.platform }}
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss - generating Python dependencies for ${{ matrix.platform }}..."
          cd internal/embed/server
          go run ./generate -platforms=${{ matrix.platform }}
        timeout-minutes: 10

      - name: Verify dependencies exist
        run: |
          if [ ! -d "internal/embed/server/data/${{ matrix.platform }}" ]; then
            echo "Error: Dependencies for ${{ matrix.platform }} not found!"
            exit 1
          fi
          echo "✓ Dependencies for ${{ matrix.platform }} ready"
          du -sh internal/embed/server/data/${{ matrix.platform }}

      - name: Upload Python dependencies artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-deps-${{ matrix.platform }}
          path: internal/embed/server/data/${{ matrix.platform }}
          retention-days: 1

  # ============================================================================
  # Build and release cortex-embed binaries
  # ============================================================================
  goreleaser:
    name: Release Cortex-Embed with GoReleaser
    needs: generate-python-deps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Download Python dependencies (darwin-amd64)
        uses: actions/download-artifact@v4
        with:
          name: python-deps-darwin-amd64
          path: internal/embed/server/data/darwin-amd64

      - name: Download Python dependencies (darwin-arm64)
        uses: actions/download-artifact@v4
        with:
          name: python-deps-darwin-arm64
          path: internal/embed/server/data/darwin-arm64

      - name: Download Python dependencies (linux-amd64)
        uses: actions/download-artifact@v4
        with:
          name: python-deps-linux-amd64
          path: internal/embed/server/data/linux-amd64

      - name: Download Python dependencies (linux-arm64)
        uses: actions/download-artifact@v4
        with:
          name: python-deps-linux-arm64
          path: internal/embed/server/data/linux-arm64

      - name: Download Python dependencies (windows-amd64)
        uses: actions/download-artifact@v4
        with:
          name: python-deps-windows-amd64
          path: internal/embed/server/data/windows-amd64

      - name: Verify all Python dependencies
        run: |
          echo "Checking Python dependencies..."
          ls -lh internal/embed/server/data/
          for platform in darwin-amd64 darwin-arm64 linux-amd64 linux-arm64 windows-amd64; do
            if [ -d "internal/embed/server/data/$platform" ]; then
              size=$(du -sh "internal/embed/server/data/$platform" | cut -f1)
              echo "✓ $platform ($size)"
            else
              echo "✗ $platform missing!"
              exit 1
            fi
          done

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --config .goreleaser.embed.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cortex-embed-release-artifacts
          path: dist/
          retention-days: 7
